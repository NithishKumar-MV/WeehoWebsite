{"version":3,"sources":["Booking.js"],"names":["mongoose","require","Schema","place","type","Types","ObjectId","required","ref","bookingSchema","Number","String","razorpayOrderId","model","numberOfParticipants"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YAAnBD,cAAkB,IAACA,SAAzBE,OAAA,CAGIC,MAAO,CAAEC,KAAMJ,SAASE,OAAOG,MAAMC,SAAUC,UAAU,EAAMC,IAAI,SADjEC,KAAAA,CAAAA,KAAAA,SAAoBT,OAAQK,MAACH,SAAOK,UAAA,GACtCJ,qBAAO,CAAAC,KAAAM,OAAAH,UAAA,GAAEH,KAAMJ,CAAAA,KAAQW,OAAQN,UAAMC,GAAUC,MAAAA,CAAQH,KAAhDO,OAAAJ,UAAA,GAAwDC,MAAIE,OAD7BE,gBAAAD,SAEMJ,aAASP,SAAAa,MAAA,UAAAJ,eACrDK,OAAAA,QAAAA","file":"Booking.min.js","sourcesContent":["const mongoose = require('mongoose');\r\n\r\nconst bookingSchema = new mongoose.Schema({\r\n    place: { type: mongoose.Schema.Types.ObjectId, required: true, ref:'Place' },\r\n    user: {type:mongoose.Schema.Types.ObjectId, required:true},\r\n    numberOfParticipants: { type: Number, required: true },\r\n    name: { type: String, required: true },\r\n    phone: { type: String, required: true },\r\n    price: Number,\r\n    razorpayOrderId: String,\r\n});\r\n\r\nconst BookingModel = mongoose.model('Booking', bookingSchema);\r\n\r\nmodule.exports = BookingModel;"]}