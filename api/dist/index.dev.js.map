{"version":3,"sources":["index.js"],"names":["express","require","cors","mongoose","bcrypt","jwt","User","Place","Booking","cookieParser","Razorpay","shortid","bodyParser","imageDownloader","multer","fs","config","app","bcryptSalt","genSaltSync","jwtSecret","razorpay","key_id","key_secret","use","json","urlencoded","extended","__dirname","credentials","origin","connect","process","env","MONGO_URL","getUserDataFromReq","req","Promise","resolve","reject","verify","cookies","token","err","userData","get","res","post","body","name","email","password","create","hashSync","userDoc","status","findOne","passOk","compareSync","sign","id","_id","cookie","findById","console","log","link","newName","Date","now","image","url","dest","photosMiddleware","array","uploadedFiles","i","files","length","path","originalname","parts","split","ext","newPath","renameSync","push","replace","title","address","addedPhotos","description","price","extraInfo","date","time","maxParticipants","owner","photos","placeDoc","find","params","put","toString","set","save","findByIdAndDelete","error","send","decoded","message","place","numberOfParticipants","phone","options","amount","currency","receipt","generate","payment_capture","orders","razorpayOrder","newBooking","user","razorpayOrderId","savedBooking","populate","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAMK,IAAI,GAAGL,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AACA,IAAMO,OAAO,GAAGP,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAMQ,YAAY,GAAGR,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMS,QAAQ,GAAGT,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMU,OAAO,GAAGV,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMW,UAAU,GAAGX,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMY,eAAe,GAAGZ,OAAO,CAAC,kBAAD,CAA/B;;AACA,IAAMa,MAAM,GAAGb,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMc,EAAE,GAAGd,OAAO,CAAC,IAAD,CAAlB;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBe,MAAlB;;AACA,IAAMC,GAAG,GAAGjB,OAAO,EAAnB;AAEA,IAAMkB,UAAU,GAAGd,MAAM,CAACe,WAAP,CAAmB,EAAnB,CAAnB;AACA,IAAMC,SAAS,GAAG,+BAAlB;AAEA,IAAMC,QAAQ,GAAG,IAAIX,QAAJ,CAAa;AAC1BY,EAAAA,MAAM,EAAE,yBADkB;AAE1BC,EAAAA,UAAU,EAAE;AAFc,CAAb,CAAjB;AAKAN,GAAG,CAACO,GAAJ,CAAQxB,OAAO,CAACyB,IAAR,EAAR;AACAR,GAAG,CAACO,GAAJ,CAAQf,YAAY,EAApB;AACAQ,GAAG,CAACO,GAAJ,CAAQZ,UAAU,CAACa,IAAX,EAAR;AACAR,GAAG,CAACO,GAAJ,CAAQZ,UAAU,CAACc,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAV,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAoBxB,OAAO,UAAP,CAAe4B,SAAS,GAAC,UAAzB,CAApB;AACAX,GAAG,CAACO,GAAJ,CAAQtB,IAAI,CAAC;AACT2B,EAAAA,WAAW,EAAE,IADJ;AAETC,EAAAA,MAAM,EAAE;AAFC,CAAD,CAAZ;AAKA3B,QAAQ,CAAC4B,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B;;AAEA,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpClC,IAAAA,GAAG,CAACmC,MAAJ,CAAWJ,GAAG,CAACK,OAAJ,CAAYC,KAAvB,EAA8BtB,SAA9B,EAAyC,EAAzC,EAA6C,iBAAOuB,GAAP,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,mBACrCD,GADqC;AAAA;AAAA;AAAA;;AAAA,oBAC1BA,GAD0B;;AAAA;AAEzCL,cAAAA,OAAO,CAACM,QAAD,CAAP;;AAFyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7C;AAIH,GALM,CAAP;AAMH;;AAED3B,GAAG,CAAC4B,GAAJ,CAAQ,OAAR,EAAiB,UAACT,GAAD,EAAMU,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACrB,IAAJ,CAAS,SAAT;AACH,CAFD;AAIAR,GAAG,CAAC8B,IAAJ,CAAS,WAAT,EAAsB,kBAAOX,GAAP,EAAWU,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBACYV,GAAG,CAACY,IADhB,EACXC,IADW,aACXA,IADW,EACNC,KADM,aACNA,KADM,EACAC,QADA,aACAA,QADA;AAAA;AAAA;AAAA,0CAIQ7C,IAAI,CAAC8C,MAAL,CAAY;AAC9BH,YAAAA,IAAI,EAAJA,IAD8B;AAE9BC,YAAAA,KAAK,EAALA,KAF8B;AAG9BC,YAAAA,QAAQ,EAAC/C,MAAM,CAACiD,QAAP,CAAgBF,QAAhB,EAA0BjC,UAA1B;AAHqB,WAAZ,CAJR;;AAAA;AAIRoC,UAAAA,OAJQ;AASdR,UAAAA,GAAG,CAACrB,IAAJ,CAAS6B,OAAT;AATc;AAAA;;AAAA;AAAA;AAAA;AAYdR,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgB9B,IAAhB;;AAZc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAgBAR,GAAG,CAAC8B,IAAJ,CAAS,QAAT,EAAmB,kBAAOX,GAAP,EAAWU,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACWV,GAAG,CAACY,IADf,EACRE,KADQ,cACRA,KADQ,EACDC,QADC,cACDA,QADC;AAAA;AAAA,0CAEO7C,IAAI,CAACkD,OAAL,CAAa;AAACN,YAAAA,KAAK,EAALA;AAAD,WAAb,CAFP;;AAAA;AAETI,UAAAA,OAFS;;AAGf,cAAIA,OAAJ,EAAa;AACHG,YAAAA,MADG,GACMrD,MAAM,CAACsD,WAAP,CAAmBP,QAAnB,EAA6BG,OAAO,CAACH,QAArC,CADN;;AAET,gBAAIM,MAAJ,EAAY;AACRpD,cAAAA,GAAG,CAACsD,IAAJ,CAAS;AACLT,gBAAAA,KAAK,EAACI,OAAO,CAACJ,KADT;AAELU,gBAAAA,EAAE,EAACN,OAAO,CAACO;AAFN,eAAT,EAGGzC,SAHH,EAGc,EAHd,EAGkB,UAACuB,GAAD,EAAKD,KAAL,EAAe;AAC7B,oBAAIC,GAAJ,EAAS,MAAMA,GAAN;AACTG,gBAAAA,GAAG,CAACgB,MAAJ,CAAW,OAAX,EAAoBpB,KAApB,EAA2BjB,IAA3B,CAAgC6B,OAAhC;AACH,eAND;AAOH,aARD,MASI;AACAR,cAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgB9B,IAAhB,CAAqB,aAArB;AACH;AACJ,WAdD,MAeK;AACDqB,YAAAA,GAAG,CAACrB,IAAJ,CAAS,WAAT;AACH;;AApBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAuBAR,GAAG,CAAC4B,GAAJ,CAAQ,UAAR,EAAoB,UAACT,GAAD,EAAKU,GAAL,EAAa;AAAA,MACtBJ,KADsB,GACbN,GAAG,CAACK,OADS,CACtBC,KADsB;;AAE7B,MAAIA,KAAJ,EAAW;AACPrC,IAAAA,GAAG,CAACmC,MAAJ,CAAWE,KAAX,EAAkBtB,SAAlB,EAA6B,EAA7B,EAAiC,kBAAOuB,GAAP,EAAYC,QAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBD,GADyB;AAAA;AAAA;AAAA;;AAAA,oBACdA,GADc;;AAAA;AAAA;AAAA,8CAEErC,IAAI,CAACyD,QAAL,CAAcnB,QAAQ,CAACgB,EAAvB,CAFF;;AAAA;AAAA;AAEtBX,cAAAA,IAFsB,QAEtBA,IAFsB;AAEjBC,cAAAA,KAFiB,QAEjBA,KAFiB;AAEXW,cAAAA,GAFW,QAEXA,GAFW;AAG7Bf,cAAAA,GAAG,CAACrB,IAAJ,CAAS;AAACwB,gBAAAA,IAAI,EAAJA,IAAD;AAAMC,gBAAAA,KAAK,EAALA,KAAN;AAAYW,gBAAAA,GAAG,EAAHA;AAAZ,eAAT;;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjC;AAKH,GAND,MAMO;AACHf,IAAAA,GAAG,CAACrB,IAAJ,CAAS,IAAT;AACH;AACJ,CAXD;AAaAR,GAAG,CAAC8B,IAAJ,CAAS,SAAT,EAAoB,UAACX,GAAD,EAAKU,GAAL,EAAa;AAC7BA,EAAAA,GAAG,CAACgB,MAAJ,CAAW,OAAX,EAAoB,EAApB,EAAwBrC,IAAxB,CAA6B,IAA7B;AACH,CAFD;AAIAuC,OAAO,CAACC,GAAR,CAAY;AAACrC,EAAAA,SAAS,EAATA;AAAD,CAAZ;AACAX,GAAG,CAAC8B,IAAJ,CAAS,iBAAT,EAA4B,kBAAOX,GAAP,EAAWU,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBoB,UAAAA,IADiB,GACT9B,GAAG,CAACY,IADK,CACjBkB,IADiB;AAElBC,UAAAA,OAFkB,GAER,UAAUC,IAAI,CAACC,GAAL,EAAV,GAAuB,MAFf;AAAA;AAAA,0CAGlBxD,eAAe,CAACyD,KAAhB,CAAsB;AACxBC,YAAAA,GAAG,EAAEL,IADmB;AAExBM,YAAAA,IAAI,EAAE5C,SAAS,GAAG,WAAZ,GAAyBuC;AAFP,WAAtB,CAHkB;;AAAA;AAOxBrB,UAAAA,GAAG,CAACrB,IAAJ,CAAS0C,OAAT;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAUA,IAAMM,gBAAgB,GAAG3D,MAAM,CAAC;AAAC0D,EAAAA,IAAI,EAAC;AAAN,CAAD,CAA/B;AACAvD,GAAG,CAAC8B,IAAJ,CAAS,SAAT,EAAoB0B,gBAAgB,CAACC,KAAjB,CAAuB,QAAvB,EAAiC,GAAjC,CAApB,EAA2D,UAACtC,GAAD,EAAKU,GAAL,EAAa;AACpE,MAAM6B,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxC,GAAG,CAACyC,KAAJ,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAA,uBACXxC,GAAG,CAACyC,KAAJ,CAAUD,CAAV,CADW;AAAA,QAChCG,IADgC,gBAChCA,IADgC;AAAA,QAC3BC,YAD2B,gBAC3BA,YAD2B;AAEvC,QAAMC,KAAK,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAd;AACA,QAAMC,GAAG,GAAGF,KAAK,CAACA,KAAK,CAACH,MAAN,GAAe,CAAhB,CAAjB;AACA,QAAMM,OAAO,GAAGL,IAAI,GAAG,GAAP,GAAaI,GAA7B;AACApE,IAAAA,EAAE,CAACsE,UAAH,CAAcN,IAAd,EAAoBK,OAApB;AACAT,IAAAA,aAAa,CAACW,IAAd,CAAmBF,OAAO,CAACG,OAAR,CAAgB,SAAhB,EAA0B,EAA1B,CAAnB;AACH;;AACDzC,EAAAA,GAAG,CAACrB,IAAJ,CAASkD,aAAT;AACH,CAXD;AAaA1D,GAAG,CAAC8B,IAAJ,CAAS,SAAT,EAAoB,UAACX,GAAD,EAAKU,GAAL,EAAa;AAAA,MACtBJ,KADsB,GACbN,GAAG,CAACK,OADS,CACtBC,KADsB;AAAA,mBAKzBN,GAAG,CAACY,IALqB;AAAA,MAGzBwC,KAHyB,cAGzBA,KAHyB;AAAA,MAGnBC,OAHmB,cAGnBA,OAHmB;AAAA,MAGXC,WAHW,cAGXA,WAHW;AAAA,MAGCC,WAHD,cAGCA,WAHD;AAAA,MAGaC,KAHb,cAGaA,KAHb;AAAA,MAIzBC,SAJyB,cAIzBA,SAJyB;AAAA,MAIfC,IAJe,cAIfA,IAJe;AAAA,MAIVC,IAJU,cAIVA,IAJU;AAAA,MAILC,eAJK,cAILA,eAJK;AAM7B3F,EAAAA,GAAG,CAACmC,MAAJ,CAAWE,KAAX,EAAkBtB,SAAlB,EAA6B,EAA7B,EAAiC,kBAAOuB,GAAP,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACzBD,GADyB;AAAA;AAAA;AAAA;;AAAA,kBACdA,GADc;;AAAA;AAAA;AAAA,4CAENpC,KAAK,CAAC6C,MAAN,CAAa;AAChC6C,cAAAA,KAAK,EAACrD,QAAQ,CAACgB,EADiB;AACdgC,cAAAA,KAAK,EAALA,KADc;AAEhCJ,cAAAA,KAAK,EAALA,KAFgC;AAE1BC,cAAAA,OAAO,EAAPA,OAF0B;AAElBS,cAAAA,MAAM,EAACR,WAFW;AAECC,cAAAA,WAAW,EAAXA,WAFD;AAGhCE,cAAAA,SAAS,EAATA,SAHgC;AAGtBC,cAAAA,IAAI,EAAJA,IAHsB;AAGjBC,cAAAA,IAAI,EAAJA,IAHiB;AAGZC,cAAAA,eAAe,EAAfA;AAHY,aAAb,CAFM;;AAAA;AAEvBG,YAAAA,QAFuB;AAO7BrD,YAAAA,GAAG,CAACrB,IAAJ,CAAS0E,QAAT;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;AASH,CAfD;AAiBAlF,GAAG,CAAC4B,GAAJ,CAAQ,cAAR,EAAwB,UAACT,GAAD,EAAKU,GAAL,EAAa;AAAA,MAC1BJ,KAD0B,GACjBN,GAAG,CAACK,OADa,CAC1BC,KAD0B;AAEjCrC,EAAAA,GAAG,CAACmC,MAAJ,CAAWE,KAAX,EAAkBtB,SAAlB,EAA6B,EAA7B,EAAiC,kBAAOuB,GAAP,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBgB,YAAAA,EADsB,GAChBhB,QADgB,CACtBgB,EADsB;AAAA,2BAE7Bd,GAF6B;AAAA;AAAA,4CAEbvC,KAAK,CAAC6F,IAAN,CAAW;AAACH,cAAAA,KAAK,EAACrC;AAAP,aAAX,CAFa;;AAAA;AAAA;;AAAA,yBAEzBnC,IAFyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC;AAIH,CAND;AAQAR,GAAG,CAAC4B,GAAJ,CAAQ,aAAR,EAAuB,kBAAOT,GAAP,EAAWU,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACZc,UAAAA,EADY,GACNxB,GAAG,CAACiE,MADE,CACZzC,EADY;AAAA,yBAEnBd,GAFmB;AAAA;AAAA,0CAEJvC,KAAK,CAACwD,QAAN,CAAeH,EAAf,CAFI;;AAAA;AAAA;;AAAA,uBAEfnC,IAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAKAR,GAAG,CAACqF,GAAJ,CAAQ,SAAR,EAAmB,mBAAOlE,GAAP,EAAWU,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACRJ,UAAAA,KADQ,GACCN,GAAG,CAACK,OADL,CACRC,KADQ;AAAA,uBAKXN,GAAG,CAACY,IALO,EAGXY,EAHW,cAGXA,EAHW,EAGP4B,KAHO,cAGPA,KAHO,EAGDC,OAHC,cAGDA,OAHC,EAGOC,WAHP,cAGOA,WAHP,EAGmBC,WAHnB,cAGmBA,WAHnB,EAIXE,SAJW,cAIXA,SAJW,EAIDC,IAJC,cAIDA,IAJC,EAIIC,IAJJ,cAIIA,IAJJ,EAISC,eAJT,cAISA,eAJT,EAIyBJ,KAJzB,cAIyBA,KAJzB;AAMfvF,UAAAA,GAAG,CAACmC,MAAJ,CAAWE,KAAX,EAAkBtB,SAAlB,EAA6B,EAA7B,EAAiC,kBAAOuB,GAAP,EAAYC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACzBD,GADyB;AAAA;AAAA;AAAA;;AAAA,0BACdA,GADc;;AAAA;AAAA;AAAA,oDAENpC,KAAK,CAACwD,QAAN,CAAeH,EAAf,CAFM;;AAAA;AAEvBuC,oBAAAA,QAFuB;;AAAA,0BAGzBvD,QAAQ,CAACgB,EAAT,KAAgBuC,QAAQ,CAACF,KAAT,CAAeM,QAAf,EAHS;AAAA;AAAA;AAAA;;AAIzBJ,oBAAAA,QAAQ,CAACK,GAAT,CAAa;AACThB,sBAAAA,KAAK,EAALA,KADS;AACHC,sBAAAA,OAAO,EAAPA,OADG;AACKS,sBAAAA,MAAM,EAACR,WADZ;AACwBC,sBAAAA,WAAW,EAAXA,WADxB;AAETE,sBAAAA,SAAS,EAATA,SAFS;AAECC,sBAAAA,IAAI,EAAJA,IAFD;AAEMC,sBAAAA,IAAI,EAAJA,IAFN;AAEWC,sBAAAA,eAAe,EAAfA,eAFX;AAE2BJ,sBAAAA,KAAK,EAALA;AAF3B,qBAAb;AAJyB;AAAA,oDAQnBO,QAAQ,CAACM,IAAT,EARmB;;AAAA;AASzB3D,oBAAAA,GAAG,CAACrB,IAAJ,CAAS,IAAT;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjC;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAoBAR,GAAG,UAAH,CAAW,aAAX,EAA0B,mBAAOmB,GAAP,EAAYU,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdc,UAAAA,EADc,GACPxB,GAAG,CAACiE,MADG,CACdzC,EADc;AAAA;AAAA;AAAA,0CAGZrD,KAAK,CAACmG,iBAAN,CAAwB9C,EAAxB,CAHY;;AAAA;AAIlBd,UAAAA,GAAG,CAACrB,IAAJ,CAAS,4BAAT;AAJkB;AAAA;;AAAA;AAAA;AAAA;AAMlBuC,UAAAA,OAAO,CAAC2C,KAAR,CAAc,uBAAd;AACA7D,UAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBqD,IAAhB,CAAqB,uBAArB;;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAWA3F,GAAG,CAAC4B,GAAJ,CAAQ,SAAR,EAAmB,mBAAOT,GAAP,EAAWU,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BACfA,GADe;AAAA;AAAA,0CACCvC,KAAK,CAAC6F,IAAN,EADD;;AAAA;AAAA;;AAAA,wBACX3E,IADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAIAR,GAAG,CAAC8B,IAAJ,CAAS,WAAT,EAAsB,mBAAOX,GAAP,EAAYU,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB,cAAI;AACOJ,YAAAA,KADP,GACgBN,GAAG,CAACK,OADpB,CACOC,KADP;AAGArC,YAAAA,GAAG,CAACmC,MAAJ,CAAWE,KAAX,EAAkBtB,SAAlB,EAA6B,mBAAOuB,GAAP,EAAYkE,OAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACrBlE,GADqB;AAAA;AAAA;AAAA;;AAAA,yDAEdG,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgB9B,IAAhB,CAAqB;AAAEqF,wBAAAA,OAAO,EAAE;AAAX,uBAArB,CAFc;;AAAA;AAIflE,sBAAAA,QAJe,GAIJiE,OAJI;AAAA,mCAMuCzE,GAAG,CAACY,IAN3C,EAMb+D,KANa,cAMbA,KANa,EAMNC,oBANM,cAMNA,oBANM,EAMgB/D,IANhB,cAMgBA,IANhB,EAMsBgE,KANtB,cAMsBA,KANtB,EAM6BrB,KAN7B,cAM6BA,KAN7B;AAQfsB,sBAAAA,OARe,GAQL;AACZC,wBAAAA,MAAM,EAAGvB,KAAK,GAAG,GADL;AACW;AACvBwB,wBAAAA,QAAQ,EAAE,KAFE;AAGZC,wBAAAA,OAAO,EAAE1G,OAAO,CAAC2G,QAAR,EAHG;AAIZC,wBAAAA,eAAe,EAAE;AAJL,uBARK;AAAA;AAAA;AAAA,sDAgBWlG,QAAQ,CAACmG,MAAT,CAAgBpE,MAAhB,CAAuB8D,OAAvB,CAhBX;;AAAA;AAgBXO,sBAAAA,aAhBW;AAkBXC,sBAAAA,UAlBW,GAkBE,IAAIlH,OAAJ,CAAY;AAC3BuG,wBAAAA,KAAK,EAALA,KAD2B;AAE3BY,wBAAAA,IAAI,EAAE/E,QAAQ,CAACgB,EAFY;AAG3BoD,wBAAAA,oBAAoB,EAApBA,oBAH2B;AAI3B/D,wBAAAA,IAAI,EAAJA,IAJ2B;AAK3BgE,wBAAAA,KAAK,EAALA,KAL2B;AAM3BrB,wBAAAA,KAAK,EAALA,KAN2B;AAO3BgC,wBAAAA,eAAe,EAAEH,aAAa,CAAC7D;AAPJ,uBAAZ,CAlBF;AAAA;AAAA,sDA4BU8D,UAAU,CAACjB,IAAX,EA5BV;;AAAA;AA4BXoB,sBAAAA,YA5BW;AA6BjB/E,sBAAAA,GAAG,CAACrB,IAAJ,CAASoG,YAAT;AA7BiB;AAAA;;AAAA;AAAA;AAAA;AA+BjB7D,sBAAAA,OAAO,CAAC2C,KAAR,CAAc,gCAAd;AACA7D,sBAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBqD,IAAhB,CAAqB,uBAArB;;AAhCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7B;AAoCH,WAvCD,CAuCE,OAAOD,KAAP,EAAc;AACZ3C,YAAAA,OAAO,CAACC,GAAR,CAAY0C,KAAZ;AACA7D,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBqD,IAAhB,CAAqB,uBAArB;AACH;;AA3CiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AA8CA3F,GAAG,CAAC4B,GAAJ,CAAQ,WAAR,EAAqB,mBAAOT,GAAP,EAAWU,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACMX,kBAAkB,CAACC,GAAD,CADxB;;AAAA;AACXQ,UAAAA,QADW;AAAA,0BAEjBE,GAFiB;AAAA;AAAA,0CAEAtC,OAAO,CAAC4F,IAAR,CAAa;AAACuB,YAAAA,IAAI,EAAC/E,QAAQ,CAACgB;AAAf,WAAb,EAAiCkE,QAAjC,CAA0C,OAA1C,CAFA;;AAAA;AAAA;;AAAA,wBAEbrG,IAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAKAR,GAAG,CAAC8G,MAAJ,CAAW,IAAX","sourcesContent":["const express = require('express');\r\nconst cors = require('cors');\r\nconst mongoose = require('mongoose');\r\nconst bcrypt = require('bcryptjs');\r\nconst jwt = require('jsonwebtoken');\r\nconst User = require('./models/User.js');\r\nconst Place = require('./models/Place.js');\r\nconst Booking = require('./models/Booking.js')\r\nconst cookieParser = require('cookie-parser');\r\nconst Razorpay = require('razorpay');\r\nconst shortid = require('shortid');\r\nconst bodyParser = require('body-parser');\r\nconst imageDownloader = require('image-downloader');\r\nconst multer = require('multer');\r\nconst fs = require('fs');\r\n\r\nrequire('dotenv').config();\r\nconst app = express();\r\n\r\nconst bcryptSalt = bcrypt.genSaltSync(10);\r\nconst jwtSecret = 'fasefraw4r5r3wq45wdfgw34twdfg';\r\n\r\nconst razorpay = new Razorpay({\r\n    key_id: 'rzp_test_4AAfE1spa0SuuG',\r\n    key_secret: 'LmVk3BAP6wDjj4Ls9Jw7onuU'\r\n});\r\n\r\napp.use(express.json());\r\napp.use(cookieParser());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use('/uploads', express.static(__dirname+'/uploads'));\r\napp.use(cors({\r\n    credentials: true,\r\n    origin: 'http://localhost:5173',\r\n}));\r\n\r\nmongoose.connect(process.env.MONGO_URL);\r\n  \r\nfunction getUserDataFromReq(req) {\r\n    return new Promise((resolve, reject) => {\r\n        jwt.verify(req.cookies.token, jwtSecret, {}, async (err, userData) => {\r\n            if (err) throw err;\r\n            resolve(userData);\r\n        });\r\n    });\r\n}\r\n\r\napp.get('/test', (req, res) => {\r\n    res.json('test ok');\r\n});\r\n\r\napp.post('/register', async (req,res) => {\r\n    const {name,email,password} = req.body;\r\n\r\n    try {\r\n        const userDoc = await User.create({\r\n            name,\r\n            email,\r\n            password:bcrypt.hashSync(password, bcryptSalt),\r\n        });\r\n        res.json(userDoc);\r\n    }\r\n    catch (e) {\r\n        res.status(422).json(e);\r\n    }\r\n});\r\n\r\napp.post('/login', async (req,res) => {\r\n    const {email, password} = req.body;\r\n    const userDoc = await User.findOne({email});\r\n    if (userDoc) {\r\n        const passOk = bcrypt.compareSync(password, userDoc.password);\r\n        if (passOk) {\r\n            jwt.sign({\r\n                email:userDoc.email, \r\n                id:userDoc._id\r\n            }, jwtSecret, {}, (err,token) => {\r\n                if (err) throw err;\r\n                res.cookie('token', token).json(userDoc);\r\n            });\r\n        }\r\n        else{\r\n            res.status(422).json('pass not ok')\r\n        }\r\n    }\r\n    else {\r\n        res.json('not found');\r\n    }\r\n});\r\n\r\napp.get('/profile', (req,res) => {\r\n    const {token} = req.cookies;\r\n    if (token) {\r\n        jwt.verify(token, jwtSecret, {}, async (err, userData) => {\r\n            if (err) throw err;\r\n            const {name,email,_id} = await User.findById(userData.id);\r\n            res.json({name,email,_id});\r\n        });\r\n    } else {\r\n        res.json(null);\r\n    }\r\n});\r\n\r\napp.post('/logout', (req,res) => {\r\n    res.cookie('token', '').json(true);\r\n}); \r\n\r\nconsole.log({__dirname})\r\napp.post('/upload-by-link', async (req,res) => {\r\n    const {link} = req.body;\r\n    const newName = 'photo' + Date.now() + '.jpg';\r\n    await imageDownloader.image({\r\n        url: link,\r\n        dest: __dirname + '/uploads/' +newName,\r\n    });\r\n    res.json(newName);\r\n});\r\n\r\nconst photosMiddleware = multer({dest:'uploads'});\r\napp.post('/upload', photosMiddleware.array('photos', 100), (req,res) => {\r\n    const uploadedFiles = [];\r\n    for (let i = 0; i < req.files.length; i++) {\r\n        const {path,originalname} = req.files[i];\r\n        const parts = originalname.split('.');\r\n        const ext = parts[parts.length - 1];\r\n        const newPath = path + '.' + ext;\r\n        fs.renameSync(path, newPath);\r\n        uploadedFiles.push(newPath.replace('uploads',''));\r\n    }\r\n    res.json(uploadedFiles);\r\n});\r\n\r\napp.post('/places', (req,res) => {\r\n    const {token} = req.cookies;\r\n    const {\r\n        title,address,addedPhotos,description,price,\r\n        extraInfo,date,time,maxParticipants,\r\n    } = req.body;\r\n    jwt.verify(token, jwtSecret, {}, async (err, userData) => {\r\n        if (err) throw err;\r\n        const placeDoc = await Place.create({\r\n            owner:userData.id,price,\r\n            title,address,photos:addedPhotos,description,\r\n            extraInfo,date,time,maxParticipants,\r\n        });\r\n        res.json(placeDoc);\r\n    });\r\n});\r\n\r\napp.get('/user-places', (req,res) => {\r\n    const {token} = req.cookies;\r\n    jwt.verify(token, jwtSecret, {}, async (err, userData) => {\r\n        const {id} = userData;\r\n        res.json( await Place.find({owner:id}) );\r\n    });\r\n});\r\n\r\napp.get('/places/:id', async (req,res) => {\r\n    const {id} = req.params;\r\n    res.json(await Place.findById(id));\r\n});\r\n\r\napp.put('/places', async (req,res) => {\r\n    const {token} = req.cookies;\r\n    const {\r\n        id, title,address,addedPhotos,description,\r\n        extraInfo,date,time,maxParticipants,price,\r\n    } = req.body;\r\n    jwt.verify(token, jwtSecret, {}, async (err, userData) => {\r\n        if (err) throw err;\r\n        const placeDoc = await Place.findById(id);\r\n        if (userData.id === placeDoc.owner.toString()) {\r\n            placeDoc.set({\r\n                title,address,photos:addedPhotos,description,\r\n                extraInfo,date,time,maxParticipants,price,\r\n            });\r\n            await placeDoc.save();\r\n            res.json('ok');\r\n        }\r\n    });\r\n});\r\n\r\napp.delete('/places/:id', async (req, res) => {\r\n    const { id } = req.params;\r\n    try {\r\n        await Place.findByIdAndDelete(id);\r\n        res.json('event deleted successfully');\r\n    } catch (error) {\r\n        console.error('Error deleting place:', error);\r\n        res.status(500).send('Internal Server Error');\r\n    }\r\n});\r\n\r\napp.get('/places', async (req,res) => {\r\n    res.json( await Place.find() );\r\n});\r\n\r\napp.post('/bookings', async (req, res) => {\r\n    try {\r\n        const {token} = req.cookies;\r\n\r\n        jwt.verify(token, jwtSecret, async (err, decoded) => {\r\n            if (err) {\r\n                return res.status(401).json({ message: 'Unauthorized' });\r\n            } else {\r\n                const userData = decoded;\r\n\r\n                const { place, numberOfParticipants, name, phone, price } = req.body;\r\n\r\n                const options = {\r\n                    amount: (price * 100), // Convert to paise\r\n                    currency: 'INR',\r\n                    receipt: shortid.generate(),\r\n                    payment_capture: 1\r\n                };\r\n\r\n                try {\r\n                    const razorpayOrder = await razorpay.orders.create(options);\r\n    \r\n                    const newBooking = new Booking({\r\n                        place,\r\n                        user: userData.id,\r\n                        numberOfParticipants,\r\n                        name,\r\n                        phone,\r\n                        price,\r\n                        razorpayOrderId: razorpayOrder.id,\r\n                    });\r\n    \r\n                    const savedBooking = await newBooking.save();\r\n                    res.json(savedBooking);\r\n                } catch (error) {\r\n                    console.error('Error creating Razorpay order:', error);\r\n                    res.status(500).send('Internal Server Error');\r\n                }\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n        res.status(500).send('Internal Server Error');\r\n    }\r\n});\r\n\r\napp.get('/bookings', async (req,res) => {\r\n    const userData = await getUserDataFromReq(req);\r\n    res.json ( await Booking.find({user:userData.id}).populate('place') );\r\n});\r\n\r\napp.listen(4000);"],"file":"index.dev.js"}